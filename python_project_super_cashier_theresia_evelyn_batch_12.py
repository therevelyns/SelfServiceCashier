# -*- coding: utf-8 -*-
"""Python Project Super Cashier - Theresia Evelyn Batch 12

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OhhQN6lWoAr-mWXemQGOo8FrwQ9bHguZ

# Python Project Super Cashier - Theresia Evelyn Batch 12

- [Study Case Instruction](https://docs.google.com/document/d/1TyWrKr4xPFJu3IFwt4vUW5gLXgbNRcQjSYkpGVc376I/preview)
"""

import pandas as pd

"""## Class dan Methods

"""

class Transaction:
    def __init__(self):
        '''
        fungsi menginisialisasi dictionary data item belanjaan
        '''
        self.data_item = dict()
        self.item_dibeli = dict()
        print("-"*60)
        print("SELAMAT DATANG DI SUPER KASIR PACMANN")
        print("-"*60)

# Menambah Item Isi Keranjang
    def add_item(self):
        '''
        fungsi menambahkan item belanjaan
        
        parameters
        nama    : str   nama item
        jumlah  : int   qty jumlah item belanjaan
        harga   : int   harga per item belanjaan
        '''
        nama = input('Masukkan Nama Item: ')
        jumlah = int(input('Masukan Jumlah Item: '))
        harga = int(input('Masukan Harga Per Item: '))
        self.data_item.update({nama: [jumlah, harga]})
        print('Penambahan item belanjaan berhasil')

# Mengubah Nama Item Belanjaan
    def update_item_name(self, nama, nama_baru):
        temp = self.data_item[nama]
        self.data_item.pop(nama)
        self.data_item.update({nama_baru: temp})
        print('Perubahan data item belanjaan berhasil')

# Mengubah Jumlah Item Belanjaan
    def update_item_qty(self, nama, jumlah_baru):
        '''
        fungsi untuk memperbarui jumlah item belanjaan di record yang sudah ada

        parameters
        nama        : str    nama item dari jumlah yg ingin diperbarui
        jumlah_baru : int    jumlah item diperbarui 
        '''
        self.data_item[nama][0] = jumlah_baru
        print('Perubahan data item belanjaan berhasil')

# Mengubah Harga Item Belanjaan
    def update_item_price(self, nama, harga_baru):
        self.data_item[nama][1] = harga_baru
        print('Perubahan data item belanjaan berhasil')

# Menghapus Item Belanjaan
    def delete_item(self, nama):
        self.data_item.pop(nama)
        print('Data berhasil dihapus')

# Membatalakan Belanjaan
    def reset_transaction(self):
        self.data_item.clear()
        print('Semua data berhasil dihapus')

# Memeriksa Daftar Belanjaan
    def check_order(self):
        if(len(self.data_item) == 0):
            print('Keranjang Belanjaan Kosong.')
        else:
            # print(self.data_buku)
            data = pd.DataFrame(self.data_item).T
            data.columns = ['Jumlah Item', 'Harga Item']
            print(data.to_markdown())

# Menghitung Total Tagihan
    def total_price(self):
        i = 0
        total_harga = 0

        for i in self.data_item[nama][1]:
              diskon = 0
              jumlah_harga = harga[i]
              if jumlah_harga > 500000:
                  diskon = jumlah_harga * 0.1
              elif jumlah_harga > 300000:
                  diskon = jumlah_harga * 0.08
              elif jumlah_harga > 200000:
                  diskon = jumlah_harga * 0.05
              
              harga_akhir = jumlah_harga - diskon
              total_bayar += harga_akhir
              i += 1

        print(f"Total belanjaan yang harus dibayar: {total_bayar}")
        print("Terima kasih telah menggunakan Super Cashier Pacmann.")

